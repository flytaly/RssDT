enum DigestSchedule {
    REALTIME
    EVERYHOUR
    EVERY2HOURS
    EVERY3HOURS
    EVERY6HOURS
    EVERY12HOURS
    DAILY
}

enum Permission {
    ADMIN
    USER
}

type User {
    id: ID! @unique
    email: String! @unique
    feeds: [UserFeed!]! @relation(name: "UserFeeds", onDelete: CASCADE)
    password: String
    setPasswordToken: String
    setPasswordTokenExpiry: DateTime
    permissions: [Permission]
    createdAt: DateTime!
    updatedAt: DateTime!
}

type UserFeed {
    id: ID! @unique
    activated: Boolean @default(value: false)
    activationToken: String
    activationTokenExpiry: DateTime
    feed: Feed!
    createdAt: DateTime!
    lastUpdate: DateTime # when update was sent to user last time
    schedule: DigestSchedule @default(value: DAILY)
    user: User! @relation(name: "UserFeeds", onDelete: SET_NULL)
}

type Feed {
    id: ID! @unique
    url: String! @unique
    link: String # link to the website
    title: String
    description: String
    activated: Boolean @default(value: false) # feed should be activated at least once
    language: String
    imageUrl: String
    imageTitle: String
    userFeeds: [UserFeed!]!
    items: [FeedItem!]! @relation(name: "FeedItems", onDelete: CASCADE)
    lastSuccessful: DateTime # last successful update
    createdAt: DateTime!
    updatedAt: DateTime!
}

type ItemEnclosure {
    id: ID! @unique
    url: String!
    type: String
    length: String
    item: FeedItem! @relation(name: "ItemEnclosures", onDelete: SET_NULL)
}

type FeedItem {
    id: ID! @unique
    feed: Feed @relation(name: "FeedItems", onDelete: SET_NULL)
    title: String
    description: String
    summary: String
    pubDate: DateTime
    link: String
    guid: String!
    imageUrl: String
    enclosures: [ItemEnclosure!]!
        @relation(name: "ItemEnclosures", onDelete: CASCADE)
    createdAt: DateTime!
}
